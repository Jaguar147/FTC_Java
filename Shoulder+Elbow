package org.firstinspires.ftc.teamcode;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@Autonomous 

//shoulder 1, no stop brake mode

public class CombineMethods extends LinearOpMode {

  DcMotor shoulder;
  DcMotor elbow;

   int shoulder_pos;
   int elbow_pos;


    @Override 
    public void runOpMode () {
        
shoulder = hardwareMap.get(DcMotor.class, "shoulder");
shoulder.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
shoulder.setDirection(DcMotor.Direction.REVERSE);
shoulder.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

elbow = hardwareMap.get(DcMotor.class, "elbow");
elbow.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
//Not sure if needed:
elbow.setDirection(DcMotor.Direction.REVERSE);
elbow.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

shoulder_pos = 0;
elbow_pos = 0;

waitForStart();

settingShoulder(110, 0.5);

settingElbow(20, 0.5);


}

private void settingShoulder (int shoulderAngle, double shoulderSpeed ) {

//for shoulder 1: 5203-2402-0019 model
// Gear ratio = 20 tooth to 100 tooth
    
    double motorTPR_shoulder = 537.7;
    double gearRatio_shoulder = 5;
    double ShoulderTPR = (gearRatio_shoulder * motorTPR_shoulder);
    double Shoulder_ticksPerDegree = (ShoulderTPR / 360);

    int shoulderTarget = (int)(Shoulder_ticksPerDegree * shoulderAngle);

    //define shoulder_pos as zero in start
           shoulder.setTargetPosition(shoulder_pos + shoulderTarget);
         
 shoulder_pos += shoulderTarget;

            shoulder.setMode(DcMotor.RunMode.RUN_TO_POSITION);

           shoulder.setPower(shoulderSpeed);

        // Wait for motors to reach the target positions
        while (opModeIsActive() && shoulder.isBusy()) {
            // You can add telemetry here if needed to monitor progress
        }

        // Stop motors once target is reached
        shoulder.setPower(0);

 }



private void settingElbow (int elbowAngle, double elbowSpeed) {

//for elbow 1: 5203-2402-0014 model
// Gear ratio = 1 tooth to 2 tooth
    
    double motorTPR_elbow = 384.5;
    double gearRatio_elbow = 2;
    double ElbowTPR = (gearRatio_elbow  * motorTPR_elbow);
    double Elbow_ticksPerDegree = (ElbowTPR / 360);

    int elbowTarget = (int)(Elbow_ticksPerDegree * elbowAngle);

    //define shoulder_pos as zero in start
           elbow.setTargetPosition(elbow_pos + elbowTarget);
         
elbow_pos += elbowTarget;

            elbow.setMode(DcMotor.RunMode.RUN_TO_POSITION);

            elbow.setPower(elbowSpeed);

        // Wait for motors to reach the target positions
        while (opModeIsActive() && elbow.isBusy()) {
            // You can add telemetry here if needed to monitor progress
        }

        // Stop motors once target is reached
        elbow.setPower(0);
 }

}
